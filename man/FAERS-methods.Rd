% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-utils.R
\name{faers_get}
\alias{faers_get}
\alias{faers_get,FAERSascii-method}
\alias{[[,FAERSascii-method}
\alias{[,FAERSascii,ANY,ANY,ANY-method}
\alias{[,FAERSascii-method}
\alias{faers_keep}
\alias{faers_keep,FAERSascii-method}
\alias{faers_filter}
\alias{faers_filter,FAERSascii-method}
\alias{faers_phv_table}
\alias{faers_phv_table,FAERSascii,missing,missing-method}
\alias{faers_phv_table,FAERSascii,FAERSascii,missing-method}
\alias{faers_phv_table,FAERSascii,missing,FAERSascii-method}
\alias{faers_phv_table,FAERSascii,FAERSascii,FAERSascii-method}
\alias{faers_phv_signal}
\alias{faers_phv_signal,FAERSascii-method}
\title{Methods for FAERS class}
\usage{
faers_get(object, ...)

\S4method{faers_get}{FAERSascii}(object, field)

\S4method{[[}{FAERSascii}(x, i)

\S4method{[}{FAERSascii,ANY,ANY,ANY}(x, i)

faers_keep(object, ...)

\S4method{faers_keep}{FAERSascii}(object, primaryid = NULL)

faers_filter(object, ...)

\S4method{faers_filter}{FAERSascii}(object, .fn, ..., field = NULL)

faers_phv_table(object, ..., interested, object2)

\S4method{faers_phv_table}{FAERSascii,missing,missing}(object, pt = "soc_name", ..., interested, object2)

\S4method{faers_phv_table}{FAERSascii,FAERSascii,missing}(object, pt = "soc_name", interested, object2)

\S4method{faers_phv_table}{FAERSascii,missing,FAERSascii}(object, pt = "soc_name", interested, object2)

\S4method{faers_phv_table}{FAERSascii,FAERSascii,FAERSascii}(object, interested, object2)

faers_phv_signal(object, ...)

\S4method{faers_phv_signal}{FAERSascii}(
  object,
  pt = "soc_name",
  ...,
  methods = NULL,
  alpha = 0.05,
  correct = TRUE,
  n_mcmc = 100000L,
  alpha1 = 0.5,
  alpha2 = 0.5
)
}
\arguments{
\item{object}{A \link{FAERS} object.}

\item{...}{Other arguments passed to specific methods.
\itemize{
\item \code{faers_filter}: other arguments passed to \code{.fn}.
\item \code{faers_phv_table}: other arguments passed to \code{faers_filter} and \code{...} is
solely used when \code{interested} is \code{NULL}.
\item \code{faers_phv_signal}: other arguments passed to \code{faers_phv_table}.
}}

\item{field}{A string indicates the FAERS fields data applied with \code{.fn} to
extract primaryid. If \code{NULL}, the object will be passed to \code{.fn} directly.
For string, only values "demo", "drug", "indi", "ther", "reac", "rpsr", and
"outc" can be used.}

\item{x}{A \link{FAERSascii} object.}

\item{i}{Indices specifying elements to extract. See \code{field}. It will be okay
to use integer indices.}

\item{primaryid}{An atomic character or integer specifies the reports to
keep. If \code{NULL}, will do nothing.}

\item{.fn}{A function or formula.

If a \strong{function}, it is used as is.

If a \strong{formula}, e.g. \code{~ .x + 2}, it is converted to a function with up to
two arguments: \code{.x} (single argument) or \code{.x} and \code{.y} (two arguments). The
\code{.} placeholder can be used instead of \code{.x}.  This allows you to create
very compact anonymous functions (lambdas) with up to two inputs.

If a \strong{string}, the function is looked up in \code{globalenv()}.}

\item{interested}{A \link{FAERSascii} object with data from interested drug, must
be a subset of \code{object}. If \code{interested} and \code{object2} are both \code{missing},
the \code{faers_filter} function will be employed to extract data for the drug of
interest from the \code{object}. The value \code{n11} or \code{a} will be calculated from
\code{interested} .}

\item{object2}{A \link{FAERSascii} object with data from another interested drug,
In this way, \code{object} and \code{object2} should be not overlapped. The value \code{n11}
or \code{a} will be calculated from \code{object}}

\item{pt}{A character specify the events column in \code{reac} field of object.}

\item{methods}{An atomic character, specifies the method used to signal
mining. Currently, only "ror", "prr", "chisq", "bcpnn_norm", "bcpnn_mcmc",
"obsexp_shrink", and "fisher" are supported. If \code{NULL}, all supported methods
will be used.}

\item{alpha}{Level of significance, for construction of the confidence
intervals.}

\item{correct}{A bool indicating whether to apply Yates's continuity
correction when computing the chi-squared statistic.}

\item{n_mcmc}{Number of MCMC simulations per \verb{(a,b,c,d)}-tuple to calculate
confidence intervals.}

\item{alpha1}{Numerator shrinkage parameter \verb{>=0}, default \code{0.5}.}

\item{alpha2}{Denominator shrinkage parameter \verb{>=0}, default \code{0.5}.}
}
\description{
Utils function for \link{FAERS} class.
}
\details{
\itemize{
\item \code{faers_get}: Extract a specific field \link[data.table:data.table]{data.table}
from \link{FAERS} object.
\item \code{faers_keep}: only keep data from specified \code{primaryid}. Note: \code{year},
\code{quarter}, \code{deletedCases} will be kept as the original. So make sure you
didn't filter a whole period FAERS quarterly data, in this way, it's much
better to run \link[=FAERS]{faers}.
\item \code{faers_filter}: apply a function to extract wanted \code{primaryid}, then use
\code{faers_keep} to filter.
\item \code{faers_phv_table}: build a contingency table for all events in \code{pt}
column.
\item \code{faers_phv_signal}: Pharmacovigilance Analysis used contingency table
constructed with \code{faers_phv_table}. Details see \link{phv_signal}.
}
}
\seealso{
\link{phv_signal}
}
